[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alphadev"
version = "0.1.0"
description = "AlphaDev package with ACME and Reverb backend."
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Miklos Hamar", email = "miklos.hamar@student.uva.nl" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Operating System :: OS Independent",
]
dependencies = [
    # Dependencies from your src/alphadev/requirements.txt:
    "absl-py==1.4.0",
    "ale-py==0.7.5",
    "annotated-types==0.7.0",
    "array-record==0.7.2",
    "astunparse==1.6.3",
    "atari-py==0.2.9",
    "attrs==25.3.0",
    "bsuite==0.3.5",
    "cached-property==2.0.1",
    "cachetools==5.5.2",
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "chex==0.1.82",
    "click==8.2.0",
    "cloudpickle==3.1.1",
    "contourpy==1.3.2",
    "cycler==0.12.1",
    "decorator==5.2.1",
    "dill==0.4.0",
    "distrax==0.1.5",
    # dm-acme submodule (editable install from local path):
    "dm-acme @ {root:uri}/acme", # Changed from file:./acme
    "dm-control==1.0.30",
    "dm-env==1.6",
    "dm-haiku==0.0.14",
    "dm-launchpad==0.5.2",
    "dm-reverb==0.7.2",
    "dm-sonnet==2.0.2",
    "dm-tree==0.1.9",
    "docker-pycreds==0.4.0",
    "docstring-parser==0.16",
    "einops==0.8.1",
    "etils==1.12.2",
    "exceptiongroup==1.3.0",
    "execnet==2.1.1",
    "flatbuffers==1.12",
    "flax==0.7.4",
    "fonttools==4.58.0",
    "frozendict==2.4.6",
    "fsspec==2025.3.2",
    "gast==0.4.0",
    "gitdb==4.0.12",
    "gitpython==3.1.44",
    "glfw==2.9.0",
    "google-auth==2.40.1",
    "google-auth-oauthlib==0.4.6",
    "google-pasta==0.2.0",
    "googleapis-common-protos==1.59.0",
    "grpcio==1.71.0",
    "gym==0.25.0",
    "gym-notices==0.0.8",
    "h5py==3.13.0",
    "humanize==4.12.3",
    "idna==3.10",
    "imageio==2.37.0", # Updated from 2.37.0 in your requirements to avoid potential pillow conflict
    "immutabledict==4.2.1",
    "importlab==0.8.1",
    "importlib-resources==6.5.2",
    "iniconfig==2.1.0",
    "jax==0.4.6", # Note: acme setup.py has jax==0.4.3, your requirements.txt has 0.4.6. This one will be used.
    "jaxlib==0.4.6", # Note: acme setup.py has jaxlib==0.4.3, your requirements.txt has 0.4.6. This one will be used.
    "jinja2==3.1.6",
    "jmp==0.0.4",
    "keras==2.8.0",
    "keras-preprocessing==1.1.2",
    "kiwisolver==1.4.8",
    "labmaze==1.0.6",
    "lazy-loader==0.4",
    "libclang==18.1.1",
    "libcst==1.7.0",
    "lxml==5.4.0",
    "markdown==3.8",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "matplotlib==3.10.3",
    "mdurl==0.1.2",
    "mizani==0.13.5",
    "ml-collections==1.1.0", # Corrected from ml-collections==1.1.0 to remove duplicate, ensure it's 0.0.1 if that was intended from a different source
    "ml-dtypes==0.5.1",
    "mock==5.2.0",
    "msgpack==1.1.0",
    "msgspec==0.19.0",
    "mujoco==3.3.2",
    "namex==0.0.9",
    "nest-asyncio==1.6.0",
    "networkx==3.4.2",
    "ninja==1.11.1.4",
    "numpy==1.26.4",
    "oauthlib==3.2.2",
    "opt-einsum==3.4.0",
    "optax==0.2.1",
    "optree==0.15.0",
    "orbax-checkpoint==0.1.6",
    "packaging==25.0",
    "pandas==2.2.3",
    "patsy==1.0.1",
    "pillow==11.2.1",
    "platformdirs==4.3.8",
    "plotnine==0.14.5",
    "pluggy==1.5.0",
    "portpicker==1.6.0",
    "promise==2.3",
    "protobuf==3.19.6",
    "psutil==7.0.0",
    "pyarrow==20.0.0",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.2",
    "pycnite==2024.7.31",
    "pydantic==2.11.4",
    "pydantic-core==2.33.2",
    "pydot==4.0.0",
    "pygame==2.1.0",
    "pygments==2.19.1",
    "pyopengl==3.1.9",
    "pyparsing==3.2.3",
    "pytest==8.3.5",
    "pytest-xdist==3.6.1",
    "python-dateutil==2.9.0.post0",
    "pytype==2024.10.11",
    "pytz==2025.2",
    "pyyaml==6.0.2",
    "requests==2.32.3",
    "requests-oauthlib==2.0.0",
    "rich==14.0.0",
    "rlax==0.1.7",
    "rlds==0.1.8",
    "rsa==4.9.1",
    "scikit-image==0.25.2",
    "scipy==1.15.3",
    "sentry-sdk==2.28.0",
    "setproctitle==1.3.6",
    "simple-parsing==0.1.7",
    "simplejson==3.20.1",
    "six==1.17.0",
    "smmap==5.0.2",
    "statsmodels==0.14.4",
    "tabulate==0.9.0",
    "tensorboard==2.8.0",
    "tensorboard-data-server==0.6.1",
    "tensorboard-plugin-wit==1.8.1",
    "tensorflow==2.8.4", # Your requirements.txt specifies 2.8.4
    "tensorflow-datasets==4.6.0",
    "tensorflow-estimator==2.8.0",
    "tensorflow-io-gcs-filesystem==0.37.1",
    "tensorflow-metadata==1.12.0",
    "tensorflow-probability==0.15.0", # Your requirements.txt specifies 0.15.0
    "tensorstore==0.1.74",
    "termcolor==3.1.0",
    "tf-estimator-nightly==2.8.0.dev2021122109",
    "tifffile==2025.5.10",
    "tomli==2.2.1",
    "toolz==1.0.0",
    "tqdm==4.67.1",
    "treescope==0.1.9",
    "trfl==1.2.0",
    "typing-extensions==4.13.2",
    "typing-inspection==0.4.0",
    "tzdata==2025.2",
    "urllib3==2.4.0",
    "wandb==0.19.11",
    "werkzeug==3.1.3",
    "wrapt==1.17.2",
    "zipp==3.21.0",

    # tinyfive submodule (editable install from local path):
    "tinyfive @ {root:uri}/tinyfive" # Changed from file:./tinyfive
]

[project.urls]
"Homepage" = "https://github.com/MJHamar/alphadev"
# "Bug Tracker" = "..."
# "Source Code" = "..."

# [tool.hatch.build.targets.wheel]
# # This section is intentionally left commented out.
# # For hatchling to correctly package your 'alphadev' code, you should restructure it.
# # Move all Python files and sub-packages belonging to 'alphadev'
# # (e.g., alphadev_acme.py, utils.py, config.py, agents/, distribution/, etc.)
# # into a new subdirectory: src/alphadev/alphadev/
# # Also, create an empty src/alphadev/alphadev/__init__.py file.
# # If you follow this structure, hatchling will automatically discover and package 'alphadev'.
# # If you cannot restructure, you would uncomment and configure this, for example:
# # packages = {"src" = "alphadev"} # If your code was in src/alphadev/src/
# # Or if files are directly in src/alphadev/ (less ideal):
# # packages = {"." = "alphadev"}
# # and then use 'include'/'exclude' patterns carefully.

[tool.hatch.envs.default]
skip-install = true # Avoids hatch installing the project itself in the default env

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
# If you create src/alphadev/alphadev/ and put your package's code there:
# This tells hatch to look for a directory named 'alphadev' (src/alphadev/alphadev)
# and package its contents as the 'alphadev' package.
packages = ["alphadev"]
# Ensure you have an __init__.py in src/alphadev/alphadev/
# All .py files and subdirectories (like agents/, config/) should be moved into src/alphadev/alphadev/
# The submodules 'acme' and 'tinyfive' should remain at src/alphadev/acme and src/alphadev/tinyfive.
